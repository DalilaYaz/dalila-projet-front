{"ast":null,"code":"import { EntrepriseFormComponent } from '../../components/entreprise-form/entreprise-form.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/entreprise.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/common\";\nexport class EntrepriseListComponent {\n  constructor(_entrepriseService, _router, _dialog) {\n    this._entrepriseService = _entrepriseService;\n    this._router = _router;\n    this._dialog = _dialog;\n    this.columnsToDisplay = ['id', 'companyName', 'companySiret', 'email', 'dateOfCreation', 'salarie'];\n    this.ids = [];\n  }\n\n  ngOnInit() {\n    this.fetchData();\n  }\n\n  fetchData() {\n    this.entreprises$ = this._entrepriseService.getEntreprises();\n  }\n\n  showEntrepriseDetails(entreprise) {\n    this._router.navigateByUrl('/entreprises/' + entreprise.id);\n  }\n\n  createEntreprise() {\n    const entrepriseFormData = {\n      isUpdateMode: false,\n      idToCreate: Math.max(...this.ids) + 1\n    };\n\n    const dialogRef = this._dialog.open(EntrepriseFormComponent, {\n      data: entrepriseFormData\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.fetchData();\n    });\n  }\n\n  deleteEntreprise(id) {\n    this._entrepriseService.deleteEntreprise(id).subscribe(() => {\n      this.entreprises$ = this._entrepriseService.getEntreprises();\n    });\n  }\n\n  setId(id) {\n    this.ids.push(id);\n  }\n\n}\n\nEntrepriseListComponent.ɵfac = function EntrepriseListComponent_Factory(t) {\n  return new (t || EntrepriseListComponent)(i0.ɵɵdirectiveInject(i1.EntrepriseService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.MatDialog));\n};\n\nEntrepriseListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EntrepriseListComponent,\n  selectors: [[\"app-entreprise-list\"]],\n  decls: 5,\n  vars: 5,\n  template: function EntrepriseListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"entreprise-list works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(2);\n      i0.ɵɵpipe(3, \"json\");\n      i0.ɵɵpipe(4, \"async\");\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 1, i0.ɵɵpipeBind1(4, 3, ctx.entreprises$)), \" \");\n    }\n  },\n  pipes: [i4.JsonPipe, i4.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJlbnRyZXByaXNlLWxpc3QuY29tcG9uZW50LnNjc3MifQ== */\"]\n});","map":{"version":3,"sources":["/Users/dalilayasmine/Documents/LPDIM/dalila-projet-front/src/app/entreprise/pages/entreprise-list/entreprise-list.component.ts"],"names":["EntrepriseFormComponent","i0","i1","i2","i3","i4","EntrepriseListComponent","constructor","_entrepriseService","_router","_dialog","columnsToDisplay","ids","ngOnInit","fetchData","entreprises$","getEntreprises","showEntrepriseDetails","entreprise","navigateByUrl","id","createEntreprise","entrepriseFormData","isUpdateMode","idToCreate","Math","max","dialogRef","open","data","afterClosed","subscribe","result","deleteEntreprise","setId","push","ɵfac","EntrepriseListComponent_Factory","t","ɵɵdirectiveInject","EntrepriseService","Router","MatDialog","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","template","EntrepriseListComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵpipe","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind1","pipes","JsonPipe","AsyncPipe","styles"],"mappings":"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","sourcesContent":["import { EntrepriseFormComponent } from '../../components/entreprise-form/entreprise-form.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/entreprise.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/common\";\nexport class EntrepriseListComponent {\n    constructor(_entrepriseService, _router, _dialog) {\n        this._entrepriseService = _entrepriseService;\n        this._router = _router;\n        this._dialog = _dialog;\n        this.columnsToDisplay = ['id', 'companyName', 'companySiret', 'email', 'dateOfCreation', 'salarie'];\n        this.ids = [];\n    }\n    ngOnInit() {\n        this.fetchData();\n    }\n    fetchData() {\n        this.entreprises$ = this._entrepriseService.getEntreprises();\n    }\n    showEntrepriseDetails(entreprise) {\n        this._router.navigateByUrl('/entreprises/' + entreprise.id);\n    }\n    createEntreprise() {\n        const entrepriseFormData = {\n            isUpdateMode: false,\n            idToCreate: Math.max(...this.ids) + 1,\n        };\n        const dialogRef = this._dialog.open(EntrepriseFormComponent, {\n            data: entrepriseFormData,\n        });\n        dialogRef.afterClosed().subscribe((result) => {\n            this.fetchData();\n        });\n    }\n    deleteEntreprise(id) {\n        this._entrepriseService.deleteEntreprise(id).subscribe(() => {\n            this.entreprises$ = this._entrepriseService.getEntreprises();\n        });\n    }\n    setId(id) {\n        this.ids.push(id);\n    }\n}\nEntrepriseListComponent.ɵfac = function EntrepriseListComponent_Factory(t) { return new (t || EntrepriseListComponent)(i0.ɵɵdirectiveInject(i1.EntrepriseService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.MatDialog)); };\nEntrepriseListComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: EntrepriseListComponent, selectors: [[\"app-entreprise-list\"]], decls: 5, vars: 5, template: function EntrepriseListComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"entreprise-list works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(2);\n        i0.ɵɵpipe(3, \"json\");\n        i0.ɵɵpipe(4, \"async\");\n    } if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 1, i0.ɵɵpipeBind1(4, 3, ctx.entreprises$)), \" \");\n    } }, pipes: [i4.JsonPipe, i4.AsyncPipe], styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJlbnRyZXByaXNlLWxpc3QuY29tcG9uZW50LnNjc3MifQ== */\"] });\n"]},"metadata":{},"sourceType":"module"}